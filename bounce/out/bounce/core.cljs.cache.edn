;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name bounce.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {g {:name bounce.core/g, :file "src\\bounce\\core.cljs", :line 5, :column 1, :end-line 5, :end-column 7, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 5, :column 6, :end-line 5, :end-column 7}}, setup {:protocol-inline nil, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([]))}, :name bounce.core/setup, :variadic false, :file "src\\bounce\\core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([state]))}, :name bounce.core/update-state, :variadic false, :file "src\\bounce\\core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, reflect {:protocol-inline nil, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 40, :column 7, :end-line 40, :end-column 14, :arglists (quote ([x y])), :doc "takes a coordinate and returns its 4 reflections"}, :name bounce.core/reflect, :variadic false, :file "src\\bounce\\core.cljs", :end-column 14, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "takes a coordinate and returns its 4 reflections"}, draw-state {:protocol-inline nil, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([state]))}, :name bounce.core/draw-state, :variadic false, :file "src\\bounce\\core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, bounce {:protocol-inline nil, :meta {:file "C:\\Users\\maxbi\\workspace\\magicQuil\\bounce\\src\\bounce\\core.cljs", :line 70, :column 14, :end-line 70, :end-column 20, :export true, :arglists (quote ([]))}, :name bounce.core/bounce, :variadic false, :file "src\\bounce\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:y :hsb :fn :color :update :angle :size :setup :middleware :host :vx :vy :host-id :no-start :x :draw}, :order [:hsb :color :x :y :vx :vy :angle :host :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}