;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name browsersketch.core, :imports nil, :requires {q quil.core, quil.core quil.core, m quil.middleware, quil.middleware quil.middleware}, :uses nil, :defs {rotate-me {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([options]))}, :name browsersketch.core/rotate-me, :variadic false, :file "src/browsersketch/core.cljs", :end-column 16, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, setup {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([]))}, :name browsersketch.core/setup, :variadic false, :file "src/browsersketch/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-state {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([state]))}, :name browsersketch.core/update-state, :variadic false, :file "src/browsersketch/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, reflect {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 37, :column 7, :end-line 37, :end-column 14, :arglists (quote ([x y])), :doc "takes a coordinate and returns its 4 reflections"}, :name browsersketch.core/reflect, :variadic false, :file "src/browsersketch/core.cljs", :end-column 14, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "takes a coordinate and returns its 4 reflections"}, abs {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 47, :column 7, :end-line 47, :end-column 10, :arglists (quote ([n]))}, :name browsersketch.core/abs, :variadic false, :file "src/browsersketch/core.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, draw-state {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([state]))}, :name browsersketch.core/draw-state, :variadic false, :file "src/browsersketch/core.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, browsersketch {:protocol-inline nil, :meta {:file "/home/max/workspace/magicQuil/browsersketch/src/browsersketch/core.cljs", :line 66, :column 14, :end-line 66, :end-column 27, :export true, :arglists (quote ([]))}, :name browsersketch.core/browsersketch, :variadic false, :file "src/browsersketch/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:tick :hsb :fn :color :update :angle :size :setup :middleware :host :host-id :no-start :draw}, :order [:draw :hsb :color :angle :tick :host :update :size :setup :middleware :no-start :fn :host-id]}, :doc nil}